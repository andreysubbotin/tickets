# THIS FILE WAS GENERATED AUTOMATICALLY. DO NOT EDIT.
directive @assertFalse on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @assertTrue on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @decimalMax(inclusive: Boolean = true, value: String!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @decimalMin(inclusive: Boolean = true, value: String!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @digits(fraction: Int!, integer: Int!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @email(regexp: String = ".*") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @fileId on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @future on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @futureOrPresent on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @javaType(name: String!) on SCALAR | OBJECT | INPUT_OBJECT

directive @length(max: Int = 2147483647, min: Int = 0) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @max(value: Long!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @min(value: Long!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @negative on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @negativeOrZero on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @notBlank on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @notEmpty on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @null on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @past on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @pastOrPresent on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @pattern(regexp: String!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @positive on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @positiveOrZero on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @size(max: Int = 2147483647, min: Int = 0) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @url on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

# Query root
type Query {
  checkAuthenticated: Void
  userInfo: UserInfo
  userPermissions: [String]
  clientList(filter: ClientFilterInput, sort: [ClientOrderByInput], page: OffsetPageInput): ClientDtoResultPage!
  client(id: ID!): ClientDto!
  flightList(from: Int!, to: Int!, dateMin: Date!, dateMax: Date!): [FlightDto]!
  airportList: [AirportDto]!
  ticket(id: ID!): TicketDto!
  ticketList(page: OffsetPageInput, sort: [TicketOrderByInput], filter: TicketFilterInput): TicketDtoResultPage!
}

type Mutation {
  deleteClient(id: ID!): Void
  updateClient(input: ClientDtoInput!): ClientDto!
  bookTicket(flightId: ID!, clientId: ID!): Void
  deleteTicket(id: ID!): Void
}

type AirportDto {
  id: Int
  name: String
  code: String
}

type ClientDto {
  id: ID
  firstName: String
  lastName: String
  email: String
  gender: Gender
}

type ClientDtoResultPage {
  content: [ClientDto]
  totalElements: Long!
}

type FileUploadResponse {
  fileId: String!
  uploadUrl: Url!
}

type FlightDto {
  id: Long
  number: Int
  airlineName: String
  airlineCode: String
  fromAirport: AirportDto
  toAirport: AirportDto
  takeoffDate: DateTime
  landingDate: DateTime
}

type TicketDto {
  id: ID
  price: BigDecimal
  createdBy: String
  createdDate: LocalDateTime
  client: ClientDto
  flight: FlightDto
}

type TicketDtoResultPage {
  content: [TicketDto]
  totalElements: Long!
}

# Contains information about user
type UserInfo {
  id: String!
  fullName: String
  avatar: String
}

input ClientDtoInput {
  id: ID
  firstName: String
  lastName: String
  email: String
  gender: Gender
}

input ClientFilterInput {
  firstName: String
  lastName: String
  email: String
}

input ClientOrderByInput {
  property: ClientOrderByProperty
  direction: SortDirection
}

input OffsetPageInput {
  number: Int!
  size: Int!
}

input TicketFilterInput {
  clientId: String
}

input TicketOrderByInput {
  property: TicketOrderByProperty
  direction: SortDirection
}

enum ClientOrderByProperty {
  FIRST_NAME
  LAST_NAME
}

enum Gender {
  MALE
  FEMALE
}

enum SortDirection {
  ASC
  DESC
}

enum TicketOrderByProperty {
  PRICE
}

scalar BigDecimal

scalar BigInteger

scalar Date

scalar DateTime

scalar LocalDateTime

scalar LocalTime

scalar Long

scalar Time

scalar Timestamp

scalar Url

scalar Void

